{"version":3,"file":"static/js/236.1b675be9.chunk.js","mappings":"yOAKMA,EAAiBC,EAAAA,KAAaC,MAAM,CACxCC,KAAMF,EAAAA,KACHG,OACAC,IAAI,EAAG,mBACPC,IAAI,GAAI,kBACRC,SAAS,YACZC,MAAOP,EAAAA,KACJG,OACAC,IAAI,EAAG,oBACPC,IAAI,GAAI,mBACRC,SAAS,YACZE,SAAUR,EAAAA,KACPG,OACAC,IAAI,EAAG,uBACPC,IAAI,GAAI,sBACRC,SAAS,cAGDG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MASjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEV,KAAM,GAAIK,MAAO,GAAIC,SAAU,IAChDK,iBAAkBd,EAClBe,SAXiB,SAACC,EAAQC,GAC5B,IAAQd,EAA0Ba,EAA1Bb,KAAMK,EAAoBQ,EAApBR,MAAOC,EAAaO,EAAbP,SAErBE,GAASO,EAAAA,EAAAA,IAAS,CAAEf,KAAAA,EAAMK,MAAAA,EAAOC,SAAAA,KACjCQ,EAAQE,WACT,EAGC,UAKE,UAAC,KAAD,YACE,sCACA,qCAEE,SAAC,KAAD,CAAOhB,KAAK,OAAOiB,aAAa,SAChC,SAAC,KAAD,CAAcC,UAAU,IAAIlB,KAAK,aAEnC,sCAEE,SAAC,KAAD,CAAOmB,KAAK,QAAQnB,KAAK,QAAQiB,aAAa,SAC9C,SAAC,KAAD,CAAcC,UAAU,IAAIlB,KAAK,cAEnC,yCAEE,SAAC,KAAD,CAAOmB,KAAK,WAAWnB,KAAK,WAAWiB,aAAa,SACpD,SAAC,KAAD,CAAcC,UAAU,IAAIlB,KAAK,iBAEnC,mBAAQmB,KAAK,SAAb,0BAIP,EC1Dc,SAASC,IACtB,OAAO,SAACb,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/opertaions';\nimport * as Yup from 'yup';\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .min(3, 'Too short name!')\n    .max(30, 'Too long name!')\n    .required('Required'),\n  email: Yup.string()\n    .trim()\n    .min(5, 'Too short email!')\n    .max(50, 'Too long email!')\n    .required('Required'),\n  password: Yup.string()\n    .trim()\n    .min(8, 'Too short password!')\n    .max(50, 'Too long password!')\n    .required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmitForm = (values, helpers) => {\n    const { name, email, password } = values;\n\n    dispatch(register({ name, email, password }));\n    helpers.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={RegisterSchema}\n      onSubmit={onSubmitForm}\n    >\n      <Form>\n        <h2>Register</h2>\n        <label>\n          Name\n          <Field name=\"name\" autoComplete=\"off\" />\n          <ErrorMessage component=\"p\" name=\"name\" />\n        </label>\n        <label>\n          Email\n          <Field type=\"email\" name=\"email\" autoComplete=\"off\" />\n          <ErrorMessage component=\"p\" name=\"email\" />\n        </label>\n        <label>\n          Password\n          <Field type=\"password\" name=\"password\" autoComplete=\"off\" />\n          <ErrorMessage component=\"p\" name=\"password\" />\n        </label>\n        <button type=\"submit\">Register</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return <RegisterForm />;\n}\n"],"names":["RegisterSchema","Yup","shape","name","trim","min","max","required","email","password","RegisterForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","helpers","register","resetForm","autoComplete","component","type","Register"],"sourceRoot":""}