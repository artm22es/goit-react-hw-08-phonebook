{"version":3,"file":"static/js/491.f05a6600.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ContactFormWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n  padding: 28px 14px;\n  gap: 20px;\n  width: 350px;\n\n  label {\n    width: 100%;\n  }\n`;\n\nexport const StyledContactField = styled(Field)`\n  background-color: transparent;\n  border: 2px solid ${p => p.theme.colors.secondaryColor};\n  border-radius: 6px;\n  height: 30px;\n  padding: 4px 8px;\n  width: 100%;\n  color: ${p => p.theme.colors.secondaryColor};\n\n  &:focus {\n    outline: none;\n    border-color: ${p => p.theme.colors.accentColor};\n  }\n\n  &::placeholder {\n    color: ${p => p.theme.colors.secondaryColor};\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: tomato;\n  font-size: 12px;\n  margin: 4px;\n`;\n\nexport const ButtonForm = styled.button`\n  background-color: transparent;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${p => p.theme.colors.secondaryColor};\n  border: 2px solid ${p => p.theme.colors.secondaryColor};\n  border-radius: 12px;\n  padding: 6px 12px;\n  transition: color ${p => p.theme.transition},\n    border-color ${p => p.theme.transition};\n\n  &:hover {\n    color: ${p => p.theme.colors.accentColor};\n    border-color: ${p => p.theme.colors.accentColor};\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter.value;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import * as Yup from 'yup';\nimport Notiflix from 'notiflix';\nimport { Formik } from 'formik';\nimport {\n  ContactFormWrapper,\n  ButtonForm,\n  Error,\n  StyledContactField,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { Section } from 'components/CommonStyle';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Invalid name format!'\n    )\n    .min(3, 'Too short contact name!')\n    .max(50, 'Too long contact name!')\n    .required('Required'),\n  number: Yup.string()\n    .trim()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Invalid phone number format!'\n    )\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onSubmitForm = (values, helpers) => {\n    if (contacts.some(contact => contact.name === values.name)) {\n      Notiflix.Notify.failure('This person already exists');\n      helpers.resetForm();\n      return;\n    }\n\n    dispatch(addContact(values));\n    helpers.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={ContactSchema}\n      onSubmit={onSubmitForm}\n    >\n      <Section>\n        <ContactFormWrapper>\n          <label>\n            <StyledContactField\n              name=\"name\"\n              autoComplete=\"off\"\n              placeholder=\"Name\"\n              required\n            />\n            <Error component=\"p\" name=\"name\" />\n          </label>\n          <label>\n            <StyledContactField\n              type=\"tel\"\n              autoComplete=\"off\"\n              name=\"number\"\n              placeholder=\"Number\"\n              required\n            />\n            <Error component=\"p\" name=\"number\" />\n          </label>\n          <ButtonForm type=\"submit\">Add contact</ButtonForm>\n        </ContactFormWrapper>\n      </Section>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  width: 600px;\n  padding-bottom: 20px;\n\n  input {\n    width: 100%;\n    background-color: transparent;\n    border: 2px solid ${p => p.theme.colors.secondaryColor};\n    border-radius: 6px;\n    height: 30px;\n    padding: 4px 8px;\n    color: ${p => p.theme.colors.secondaryColor};\n\n    &:focus {\n      outline: none;\n      border-color: ${p => p.theme.colors.accentColor};\n    }\n\n    &::placeholder {\n      color: ${p => p.theme.colors.secondaryColor};\n    }\n  }\n`;\n","import { selectFilter } from '../../redux/contacts/selectors';\nimport { changeFilter } from '../../redux/contacts/filterSlice';\nimport { FilterWrapper } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FilterWrapper>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        onChange={evt => dispatch(changeFilter(evt.target.value))}\n        placeholder=\"Filter by name\"\n      />\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 28px 14px;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n  width: 350px;\n  margin: 0;\n  gap: 20px;\n\n  li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 20px;\n    width: 100%;\n  }\n`;\n\nexport const ContactText = styled.p`\n  font-size: 18px;\n  margin: 0;\n  color: ${p => p.theme.colors.secondaryColor};\n`;\n\nexport const ContactBox = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  ContactBox,\n  ContactListWrapper,\n  ContactText,\n} from './ContactList.styled';\nimport { selectFilteredContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { Button, Text } from 'components/CommonStyle';\nimport { IoMdContact } from 'react-icons/io';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {filteredContacts.length > 0 ? (\n        <ContactListWrapper>\n          {filteredContacts.map(contact => (\n            <li key={contact.id}>\n              <ContactBox>\n                <IoMdContact size={22} color=\"#F8F8FF\" />\n                <ContactText>\n                  {contact.name}: {contact.number}\n                </ContactText>\n              </ContactBox>\n\n              <Button onClick={() => dispatch(deleteContact(contact.id))}>\n                Delete\n              </Button>\n            </li>\n          ))}\n        </ContactListWrapper>\n      ) : (\n        <Text>You don't have any contact yet</Text>\n      )}\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Section, Title } from 'components/CommonStyle';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </Section>\n      <Section>\n        <Title>Contacts</Title>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n"],"names":["ContactFormWrapper","styled","Form","StyledContactField","Field","p","theme","colors","secondaryColor","accentColor","Error","ErrorMessage","ButtonForm","transition","selectFilter","state","filter","value","selectContacts","contacts","items","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","ContactSchema","Yup","shape","trim","matches","min","max","required","number","ContactForm","useSelector","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","helpers","some","Notiflix","resetForm","addContact","autoComplete","placeholder","component","type","FilterWrapper","Filter","onChange","evt","changeFilter","target","ContactListWrapper","ContactText","ContactBox","ContactList","filteredContacts","length","map","size","color","onClick","deleteContact","id","Contacts","useEffect","fetchContacts"],"sourceRoot":""}